'use client';

// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { useState, createContext, useContext } from "react";

// Create context for selectedTab
const SelectedTabContext = createContext<{
  selectedTab: {item:string, subItem:string | null};
  setSelectedTab: (tab: {item:string, subItem:string | null}) => void;
}>({
  selectedTab: {item:"home", subItem:null},
  setSelectedTab: () => {},
});

// Custom hook to use the context
export const useSelectedTab = () => useContext(SelectedTabContext);

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [selectedTab, setSelectedTab] = useState<{item:string, subItem:string | null}>({item:"home", subItem:null});
  
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SelectedTabContext.Provider value={{ selectedTab, setSelectedTab }}>
          <Header setSelectedTab={setSelectedTab} selectedTab={selectedTab} />
          {children}
          <Footer />
        </SelectedTabContext.Provider>
      </body>
    </html>
  );
}
